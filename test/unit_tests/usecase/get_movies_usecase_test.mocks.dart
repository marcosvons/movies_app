// Mocks generated by Mockito 5.3.2 from annotations
// in movies_app/test/unit_tests/usecase/get_movies_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_app/data/model/movie_model.dart' as _i6;
import 'package:movies_app/domain/entity/movie_detail_event.dart' as _i3;
import 'package:movies_app/domain/entity/movie_event.dart' as _i2;
import 'package:movies_app/domain/repository/i_movies_repository.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieEvent_0 extends _i1.SmartFake implements _i2.MovieEvent {
  _FakeMovieEvent_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailEvent_1 extends _i1.SmartFake
    implements _i3.MovieDetailEvent {
  _FakeMovieDetailEvent_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IMoviesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIMoviesRepository extends _i1.Mock implements _i4.IMoviesRepository {
  MockIMoviesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.MovieEvent> fetchMovies(dynamic endpoint) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMovies,
          [endpoint],
        ),
        returnValue: _i5.Future<_i2.MovieEvent>.value(_FakeMovieEvent_0(
          this,
          Invocation.method(
            #fetchMovies,
            [endpoint],
          ),
        )),
      ) as _i5.Future<_i2.MovieEvent>);
  @override
  _i5.Future<_i3.MovieDetailEvent> fetchMovieDetail(_i6.MovieModel? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMovieDetail,
          [movie],
        ),
        returnValue:
            _i5.Future<_i3.MovieDetailEvent>.value(_FakeMovieDetailEvent_1(
          this,
          Invocation.method(
            #fetchMovieDetail,
            [movie],
          ),
        )),
      ) as _i5.Future<_i3.MovieDetailEvent>);
  @override
  _i5.Future<_i2.MovieEvent> searchMovies(dynamic keyword) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [keyword],
        ),
        returnValue: _i5.Future<_i2.MovieEvent>.value(_FakeMovieEvent_0(
          this,
          Invocation.method(
            #searchMovies,
            [keyword],
          ),
        )),
      ) as _i5.Future<_i2.MovieEvent>);
}
